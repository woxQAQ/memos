// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/v1/ai_service.proto

package apiv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamEventType int32

const (
	// Default event type for streaming content
	StreamEventType_CONTENT StreamEventType = 0
	// Model is ready to start generating
	StreamEventType_MODEL_READY StreamEventType = 1
	// Content output is complete
	StreamEventType_OUTPUT_COMPLETE StreamEventType = 2
	// Output stream has ended
	StreamEventType_OUTPUT_END StreamEventType = 3
	// Session has been updated
	StreamEventType_SESSION_UPDATED StreamEventType = 4
	// Title has been generated
	StreamEventType_TITLE_GENERATED StreamEventType = 5
)

// Enum value maps for StreamEventType.
var (
	StreamEventType_name = map[int32]string{
		0: "CONTENT",
		1: "MODEL_READY",
		2: "OUTPUT_COMPLETE",
		3: "OUTPUT_END",
		4: "SESSION_UPDATED",
		5: "TITLE_GENERATED",
	}
	StreamEventType_value = map[string]int32{
		"CONTENT":         0,
		"MODEL_READY":     1,
		"OUTPUT_COMPLETE": 2,
		"OUTPUT_END":      3,
		"SESSION_UPDATED": 4,
		"TITLE_GENERATED": 5,
	}
)

func (x StreamEventType) Enum() *StreamEventType {
	p := new(StreamEventType)
	*p = x
	return p
}

func (x StreamEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_ai_service_proto_enumTypes[0].Descriptor()
}

func (StreamEventType) Type() protoreflect.EnumType {
	return &file_api_v1_ai_service_proto_enumTypes[0]
}

func (x StreamEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamEventType.Descriptor instead.
func (StreamEventType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{0}
}

type ChatMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The role of the message.
	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	// The content of the message.
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// The timestamp when the message was created.
	CreatedTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_api_v1_ai_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_ai_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

type ChatSession struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier for the session.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// The title of the session.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// The timestamp when the session was created.
	CreatedTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// The timestamp when the session was last updated.
	UpdatedTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
	// The status of the session.
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// The messages in the session.
	Messages      []*ChatMessage `protobuf:"bytes,6,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatSession) Reset() {
	*x = ChatSession{}
	mi := &file_api_v1_ai_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatSession) ProtoMessage() {}

func (x *ChatSession) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_ai_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatSession.ProtoReflect.Descriptor instead.
func (*ChatSession) Descriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{1}
}

func (x *ChatSession) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChatSession) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChatSession) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *ChatSession) GetUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedTime
	}
	return nil
}

func (x *ChatSession) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChatSession) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type GenerateContentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The content of the request.
	Messages []*ChatMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	// Optional session UID to save the conversation.
	SessionUid    string `protobuf:"bytes,2,opt,name=session_uid,json=sessionUid,proto3" json:"session_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateContentRequest) Reset() {
	*x = GenerateContentRequest{}
	mi := &file_api_v1_ai_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateContentRequest) ProtoMessage() {}

func (x *GenerateContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_ai_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateContentRequest.ProtoReflect.Descriptor instead.
func (*GenerateContentRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{2}
}

func (x *GenerateContentRequest) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GenerateContentRequest) GetSessionUid() string {
	if x != nil {
		return x.SessionUid
	}
	return ""
}

type GenerateContentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of event in this stream response
	EventType StreamEventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=memos.api.v1.StreamEventType" json:"event_type,omitempty"`
	// The content of the response (for CONTENT events).
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// The session information (for SESSION_UPDATED events).
	Session *ChatSession `protobuf:"bytes,3,opt,name=session,proto3,oneof" json:"session,omitempty"`
	// Additional message for the event
	Message       string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateContentResponse) Reset() {
	*x = GenerateContentResponse{}
	mi := &file_api_v1_ai_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateContentResponse) ProtoMessage() {}

func (x *GenerateContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_ai_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateContentResponse.ProtoReflect.Descriptor instead.
func (*GenerateContentResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateContentResponse) GetEventType() StreamEventType {
	if x != nil {
		return x.EventType
	}
	return StreamEventType_CONTENT
}

func (x *GenerateContentResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GenerateContentResponse) GetSession() *ChatSession {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GenerateContentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListChatSessionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of sessions to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token from a previous call.
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChatSessionsRequest) Reset() {
	*x = ListChatSessionsRequest{}
	mi := &file_api_v1_ai_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChatSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChatSessionsRequest) ProtoMessage() {}

func (x *ListChatSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_ai_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChatSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListChatSessionsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListChatSessionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListChatSessionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListChatSessionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of sessions.
	Sessions []*ChatSession `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	// A token to retrieve the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChatSessionsResponse) Reset() {
	*x = ListChatSessionsResponse{}
	mi := &file_api_v1_ai_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChatSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChatSessionsResponse) ProtoMessage() {}

func (x *ListChatSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_ai_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChatSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListChatSessionsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListChatSessionsResponse) GetSessions() []*ChatSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *ListChatSessionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetChatSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UID of the session to retrieve.
	Uid           string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatSessionRequest) Reset() {
	*x = GetChatSessionRequest{}
	mi := &file_api_v1_ai_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatSessionRequest) ProtoMessage() {}

func (x *GetChatSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_ai_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatSessionRequest.ProtoReflect.Descriptor instead.
func (*GetChatSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetChatSessionRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type UpdateChatSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UID of the session to update.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// The new title of the session.
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateChatSessionRequest) Reset() {
	*x = UpdateChatSessionRequest{}
	mi := &file_api_v1_ai_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChatSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChatSessionRequest) ProtoMessage() {}

func (x *UpdateChatSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_ai_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChatSessionRequest.ProtoReflect.Descriptor instead.
func (*UpdateChatSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateChatSessionRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UpdateChatSessionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type UpdateChatSessionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated session.
	Session       *ChatSession `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateChatSessionResponse) Reset() {
	*x = UpdateChatSessionResponse{}
	mi := &file_api_v1_ai_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChatSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChatSessionResponse) ProtoMessage() {}

func (x *UpdateChatSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_ai_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChatSessionResponse.ProtoReflect.Descriptor instead.
func (*UpdateChatSessionResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateChatSessionResponse) GetSession() *ChatSession {
	if x != nil {
		return x.Session
	}
	return nil
}

type DeleteChatSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UID of the session to delete.
	Uid           string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChatSessionRequest) Reset() {
	*x = DeleteChatSessionRequest{}
	mi := &file_api_v1_ai_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChatSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatSessionRequest) ProtoMessage() {}

func (x *DeleteChatSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_ai_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatSessionRequest.ProtoReflect.Descriptor instead.
func (*DeleteChatSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteChatSessionRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type DeleteChatSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChatSessionResponse) Reset() {
	*x = DeleteChatSessionResponse{}
	mi := &file_api_v1_ai_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChatSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatSessionResponse) ProtoMessage() {}

func (x *DeleteChatSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_ai_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatSessionResponse.ProtoReflect.Descriptor instead.
func (*DeleteChatSessionResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_ai_service_proto_rawDescGZIP(), []int{10}
}

var File_api_v1_ai_service_proto protoreflect.FileDescriptor

const file_api_v1_ai_service_proto_rawDesc = "" +
	"\n" +
	"\x17api/v1/ai_service.proto\x12\fmemos.api.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"z\n" +
	"\vChatMessage\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12=\n" +
	"\fcreated_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vcreatedTime\"\x82\x02\n" +
	"\vChatSession\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12=\n" +
	"\fcreated_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vcreatedTime\x12=\n" +
	"\fupdated_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vupdatedTime\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x125\n" +
	"\bmessages\x18\x06 \x03(\v2\x19.memos.api.v1.ChatMessageR\bmessages\"p\n" +
	"\x16GenerateContentRequest\x125\n" +
	"\bmessages\x18\x01 \x03(\v2\x19.memos.api.v1.ChatMessageR\bmessages\x12\x1f\n" +
	"\vsession_uid\x18\x02 \x01(\tR\n" +
	"sessionUid\"\xd1\x01\n" +
	"\x17GenerateContentResponse\x12<\n" +
	"\n" +
	"event_type\x18\x01 \x01(\x0e2\x1d.memos.api.v1.StreamEventTypeR\teventType\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x128\n" +
	"\asession\x18\x03 \x01(\v2\x19.memos.api.v1.ChatSessionH\x00R\asession\x88\x01\x01\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessageB\n" +
	"\n" +
	"\b_session\"U\n" +
	"\x17ListChatSessionsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"y\n" +
	"\x18ListChatSessionsResponse\x125\n" +
	"\bsessions\x18\x01 \x03(\v2\x19.memos.api.v1.ChatSessionR\bsessions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\")\n" +
	"\x15GetChatSessionRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\"B\n" +
	"\x18UpdateChatSessionRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\"P\n" +
	"\x19UpdateChatSessionResponse\x123\n" +
	"\asession\x18\x01 \x01(\v2\x19.memos.api.v1.ChatSessionR\asession\",\n" +
	"\x18DeleteChatSessionRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\"\x1b\n" +
	"\x19DeleteChatSessionResponse*~\n" +
	"\x0fStreamEventType\x12\v\n" +
	"\aCONTENT\x10\x00\x12\x0f\n" +
	"\vMODEL_READY\x10\x01\x12\x13\n" +
	"\x0fOUTPUT_COMPLETE\x10\x02\x12\x0e\n" +
	"\n" +
	"OUTPUT_END\x10\x03\x12\x13\n" +
	"\x0fSESSION_UPDATED\x10\x04\x12\x13\n" +
	"\x0fTITLE_GENERATED\x10\x052\x9a\x05\n" +
	"\tAIService\x12\x80\x01\n" +
	"\x0fGenerateContent\x12$.memos.api.v1.GenerateContentRequest\x1a%.memos.api.v1.GenerateContentResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/api/v1/ai/generate0\x01\x12~\n" +
	"\x10ListChatSessions\x12%.memos.api.v1.ListChatSessionsRequest\x1a&.memos.api.v1.ListChatSessionsResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/api/v1/ai/sessions\x12s\n" +
	"\x0eGetChatSession\x12#.memos.api.v1.GetChatSessionRequest\x1a\x19.memos.api.v1.ChatSession\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/api/v1/ai/sessions/{uid}\x12\x8a\x01\n" +
	"\x11UpdateChatSession\x12&.memos.api.v1.UpdateChatSessionRequest\x1a'.memos.api.v1.UpdateChatSessionResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*2\x19/api/v1/ai/sessions/{uid}\x12\x87\x01\n" +
	"\x11DeleteChatSession\x12&.memos.api.v1.DeleteChatSessionRequest\x1a'.memos.api.v1.DeleteChatSessionResponse\"!\x82\xd3\xe4\x93\x02\x1b*\x19/api/v1/ai/sessions/{uid}B\xa6\x01\n" +
	"\x10com.memos.api.v1B\x0eAiServiceProtoP\x01Z0github.com/usememos/memos/proto/gen/api/v1;apiv1\xa2\x02\x03MAX\xaa\x02\fMemos.Api.V1\xca\x02\fMemos\\Api\\V1\xe2\x02\x18Memos\\Api\\V1\\GPBMetadata\xea\x02\x0eMemos::Api::V1b\x06proto3"

var (
	file_api_v1_ai_service_proto_rawDescOnce sync.Once
	file_api_v1_ai_service_proto_rawDescData []byte
)

func file_api_v1_ai_service_proto_rawDescGZIP() []byte {
	file_api_v1_ai_service_proto_rawDescOnce.Do(func() {
		file_api_v1_ai_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_ai_service_proto_rawDesc), len(file_api_v1_ai_service_proto_rawDesc)))
	})
	return file_api_v1_ai_service_proto_rawDescData
}

var file_api_v1_ai_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_ai_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_v1_ai_service_proto_goTypes = []any{
	(StreamEventType)(0),              // 0: memos.api.v1.StreamEventType
	(*ChatMessage)(nil),               // 1: memos.api.v1.ChatMessage
	(*ChatSession)(nil),               // 2: memos.api.v1.ChatSession
	(*GenerateContentRequest)(nil),    // 3: memos.api.v1.GenerateContentRequest
	(*GenerateContentResponse)(nil),   // 4: memos.api.v1.GenerateContentResponse
	(*ListChatSessionsRequest)(nil),   // 5: memos.api.v1.ListChatSessionsRequest
	(*ListChatSessionsResponse)(nil),  // 6: memos.api.v1.ListChatSessionsResponse
	(*GetChatSessionRequest)(nil),     // 7: memos.api.v1.GetChatSessionRequest
	(*UpdateChatSessionRequest)(nil),  // 8: memos.api.v1.UpdateChatSessionRequest
	(*UpdateChatSessionResponse)(nil), // 9: memos.api.v1.UpdateChatSessionResponse
	(*DeleteChatSessionRequest)(nil),  // 10: memos.api.v1.DeleteChatSessionRequest
	(*DeleteChatSessionResponse)(nil), // 11: memos.api.v1.DeleteChatSessionResponse
	(*timestamppb.Timestamp)(nil),     // 12: google.protobuf.Timestamp
}
var file_api_v1_ai_service_proto_depIdxs = []int32{
	12, // 0: memos.api.v1.ChatMessage.created_time:type_name -> google.protobuf.Timestamp
	12, // 1: memos.api.v1.ChatSession.created_time:type_name -> google.protobuf.Timestamp
	12, // 2: memos.api.v1.ChatSession.updated_time:type_name -> google.protobuf.Timestamp
	1,  // 3: memos.api.v1.ChatSession.messages:type_name -> memos.api.v1.ChatMessage
	1,  // 4: memos.api.v1.GenerateContentRequest.messages:type_name -> memos.api.v1.ChatMessage
	0,  // 5: memos.api.v1.GenerateContentResponse.event_type:type_name -> memos.api.v1.StreamEventType
	2,  // 6: memos.api.v1.GenerateContentResponse.session:type_name -> memos.api.v1.ChatSession
	2,  // 7: memos.api.v1.ListChatSessionsResponse.sessions:type_name -> memos.api.v1.ChatSession
	2,  // 8: memos.api.v1.UpdateChatSessionResponse.session:type_name -> memos.api.v1.ChatSession
	3,  // 9: memos.api.v1.AIService.GenerateContent:input_type -> memos.api.v1.GenerateContentRequest
	5,  // 10: memos.api.v1.AIService.ListChatSessions:input_type -> memos.api.v1.ListChatSessionsRequest
	7,  // 11: memos.api.v1.AIService.GetChatSession:input_type -> memos.api.v1.GetChatSessionRequest
	8,  // 12: memos.api.v1.AIService.UpdateChatSession:input_type -> memos.api.v1.UpdateChatSessionRequest
	10, // 13: memos.api.v1.AIService.DeleteChatSession:input_type -> memos.api.v1.DeleteChatSessionRequest
	4,  // 14: memos.api.v1.AIService.GenerateContent:output_type -> memos.api.v1.GenerateContentResponse
	6,  // 15: memos.api.v1.AIService.ListChatSessions:output_type -> memos.api.v1.ListChatSessionsResponse
	2,  // 16: memos.api.v1.AIService.GetChatSession:output_type -> memos.api.v1.ChatSession
	9,  // 17: memos.api.v1.AIService.UpdateChatSession:output_type -> memos.api.v1.UpdateChatSessionResponse
	11, // 18: memos.api.v1.AIService.DeleteChatSession:output_type -> memos.api.v1.DeleteChatSessionResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_v1_ai_service_proto_init() }
func file_api_v1_ai_service_proto_init() {
	if File_api_v1_ai_service_proto != nil {
		return
	}
	file_api_v1_ai_service_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_ai_service_proto_rawDesc), len(file_api_v1_ai_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_ai_service_proto_goTypes,
		DependencyIndexes: file_api_v1_ai_service_proto_depIdxs,
		EnumInfos:         file_api_v1_ai_service_proto_enumTypes,
		MessageInfos:      file_api_v1_ai_service_proto_msgTypes,
	}.Build()
	File_api_v1_ai_service_proto = out.File
	file_api_v1_ai_service_proto_goTypes = nil
	file_api_v1_ai_service_proto_depIdxs = nil
}
